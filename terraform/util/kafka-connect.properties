bootstrap.servers=${broker_list}
group.id=connect-cluster

basic.auth.credentials.source=USER_INFO
schema.registry.basic.auth.user.info=${schema_registry_basic_auth}
key.converter=io.confluent.connect.avro.AvroConverter
key.converter.schema.registry.url=${schema_registry_url}
value.converter=io.confluent.connect.avro.AvroConverter
value.converter.schema.registry.url=${schema_registry_url}

internal.key.converter=org.apache.kafka.connect.json.JsonConverter
internal.value.converter=org.apache.kafka.connect.json.JsonConverter
internal.key.converter.schemas.enable=false
internal.value.converter.schemas.enable=false

offset.storage.topic=${global_prefix}-connect-offsets
offset.storage.replication.factor=3
offset.storage.partitions=3

config.storage.topic=${global_prefix}-connect-configs
config.storage.replication.factor=3
config.storage.partitions=3

status.storage.topic=${global_prefix}-connect-status
status.storage.replication.factor=3
status.storage.partitions=3

offset.flush.interval.ms=10000

ssl.endpoint.identification.algorithm=https
sasl.mechanism=PLAIN
request.timeout.ms=20000
retry.backoff.ms=500
sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required \
username="${access_key}" password="${secret_key}";
security.protocol=SASL_SSL

consumer.ssl.endpoint.identification.algorithm=https
consumer.sasl.mechanism=PLAIN
consumer.request.timeout.ms=20000
consumer.retry.backoff.ms=500
consumer.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required \
username="${access_key}" password="${secret_key}";
consumer.security.protocol=SASL_SSL

producer.ssl.endpoint.identification.algorithm=https
producer.sasl.mechanism=PLAIN
producer.request.timeout.ms=20000
producer.retry.backoff.ms=500
producer.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required \
username="${access_key}" password="${secret_key}";
producer.security.protocol=SASL_SSL

plugin.path=${confluent_home_value}/share/java
consumer.interceptor.classes=io.confluent.devx.util.KafkaTracingConsumerInterceptor
producer.interceptor.classes=io.confluent.devx.util.KafkaTracingProducerInterceptor
